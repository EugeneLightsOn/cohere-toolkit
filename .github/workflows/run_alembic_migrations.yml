name: Automated Migrations

on:
  push:
    branches: [ TLK-580_automated_migrations ]

env:
    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    SSH_HOSTNAME: ${{secrets.SSH_HOST}}
    SSH_USER_NAME: ${{secrets.SSH_USER_NAME}}
    DATABASE_URL: ${{secrets.DATABASE_URL}}
    MIGRATION_API_ENDPOINT: ${{secrets.MIGRATION_API_ENDPOINT}}
    MIGRATION_API_TOKEN: ${{secrets.MIGRATION_API_TOKEN}}
    # Check if the SSH params are present we will use SSH to run migrations.
    USE_SSH: ${{ (secrets.SSH_PRIVATE_KEY != '') && (secrets.SSH_HOST != '') && (secrets.SSH_USER_NAME != '') }}
    # Check if the migration API params are present we will use the migration API to run migrations.
    USE_MIGRATION_API: ${{ (secrets.MIGRATION_API_ENDPOINT != '') && (secrets.MIGRATION_API_TOKEN != '') }}
    # Check if the database URL is present we will use the database URL to run migrations.
    # Please note that the database connection should be open to the IP from where the migrations are being run.
    USE_DATABASE_URL: ${{ secrets.DATABASE_URL != '' }}
jobs:
  run-alembic-migrations:
    name: Run Alembic Migrations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Alembic Migrations - SSH
      - if: ${{ (env.USE_SSH == true) && (env.USE_MIGRATION_API == false) && (env.USE_DATABASE_URL == false) }}
        run: |
          echo "Running migrations using SSH"
#          echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
#          ssh -o StrictHostKeyChecking=no -i private_key ${SSH_USER_NAME}@${SSH_HOSTNAME} '
#
#              # Now we have got the access of EC2 and we will start the deploy .
#              cd /home/ubuntu/<PROJECT_DIRECTORY> &&
#              git checkout dev &&
#              git fetch --all &&
#              git reset --hard origin/dev &&
#              git pull origin dev &&
#              sudo npm i &&
#              sudo npm run build &&
#              sudo pm2 stop ./dist/index.js &&
#              sudo pm2 start ./dist/index.js
#              '
      - if: ${{ (env.USE_SSH == false) && (env.USE_MIGRATION_API == true) && (env.USE_DATABASE_URL == false) }}
        run: |
                echo "Running migrations using the migration API"
      - if: ${{ (env.USE_SSH == false) && (env.USE_MIGRATION_API == false) && (env.USE_DATABASE_URL == true) }}
        run: |
                echo "Running migrations using the database URL"
          
